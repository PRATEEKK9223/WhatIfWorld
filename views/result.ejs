<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>What If World - Scenario Result</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: "Segoe UI", sans-serif;
      background-color: #f9fafb;
      color: #111827;
      margin: 0;
      padding: 20px;
    }

    .container {
      max-width: 900px;
      margin: 0 auto;
      background: #fff;
      border-radius: 16px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      padding: 25px;
    }

    h2 {
      color: #4f46e5;
      margin-bottom: 10px;
    }

    .section {
      margin-top: 20px;
    }

    ul {
      margin: 0;
      padding-left: 20px;
    }

    canvas {
      margin-top: 30px;
      max-width: 100%;
      height: 350px;
    }

    .chart-title {
      font-weight: bold;
      margin-top: 25px;
      color: #374151;
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Scenario: <%= result.textual_analysis.scenario %></h2>
    <p><strong>Domain:</strong> <%= result.textual_analysis.domain %></p>
    <p><strong>Probability:</strong> <mark><%= result.textual_analysis.probability %>%</mark> </p>

    <div class="section">
      <h3>Key Implications:</h3>
      <ul>
        <% result.textual_analysis.key_implications.forEach(item => { %>
          <li><%= item %></li>
        <% }) %>
      </ul>
    </div>

    <div class="section">
      <h3>Potential Challenges:</h3>
      <ul>
        <% result.textual_analysis.potential_challenges.forEach(item => { %>
          <li><%= item %></li>
        <% }) %>
      </ul>
    </div>

    <div class="section">
      <h3 class="chart-title">Statistical Impact Overview with bar chart</h3>
      <canvas id="scenarioChart"></canvas>
    </div>

    <div class="section">
      <h3 class="chart-title">Statistical Impact Overview with Pie chart</h3>
      <canvas id="scenarioChart2"></canvas>
    </div>
  </div>

  <script>
    const stats = <%- JSON.stringify(result.statistics) %>;

    let labels = [];
    let values = [];

    // ✅ Check if data is nested (like 'all') or flat (like 'education')
    const isNested = Object.values(stats)[0] && typeof Object.values(stats)[0] === 'object';

    if (isNested) {
      // Flatten nested domains (for "All" option)
      for (const domain in stats) {
        for (const key in stats[domain]) {
          labels.push(`${domain} - ${key}`);
          values.push(stats[domain][key]);
        }
      }
    } else {
      // Flat object (for single domain)
      labels = Object.keys(stats);
      values = Object.values(stats);
    }

    // If some values are large (like 95, 80 etc.), don’t multiply by 100 again
    const adjustValues = values.some(v => v > 1) ? values : values.map(v => v * 100);

    const ctx = document.getElementById('scenarioChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: labels,
        datasets: [{
          label: 'Impact (%)',
          data: adjustValues,
          backgroundColor: [
            '#8b5cf6', '#a855f7', '#06b6d4', '#10b981', '#f59e0b', '#ef4444', '#3b82f6',
            '#f43f5e', '#14b8a6', '#eab308', '#9333ea', '#f97316', '#0ea5e9', '#22c55e'
          ],
          borderRadius: 10
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: { display: false },
          tooltip: {
            backgroundColor: '#111827',
            titleColor: '#f9fafb',
            bodyColor: '#f9fafb'
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            max: Math.max(...adjustValues) > 100 ? undefined : 100,
            title: {
              display: true,
              text: 'Impact Level (%)'
            }
          },
          x: {
            ticks: { font: { size: 11 }, maxRotation: 90, minRotation: 45 }
          }
        }
      }
    });

    const ctx2 = document.getElementById('scenarioChart2').getContext('2d');
    new Chart(ctx2, {
      type: 'pie',
      data: {
        labels: labels,
        datasets: [{
          label: 'Impact (%)',
          data: adjustValues,
          backgroundColor: [
            '#8b5cf6', '#a855f7', '#06b6d4', '#10b981', '#f59e0b', '#ef4444', '#3b82f6'
          ],
          borderRadius: 10
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: { display: false },
          tooltip: {
            backgroundColor: '#111827',
            titleColor: '#f9fafb',
            bodyColor: '#f9fafb'
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            max: Math.max(...adjustValues) > 100 ? undefined : 100,
            title: {
              display: true,
              text: 'Impact Level (%)'
            }
          },
          x: {
            ticks: { font: { size: 11 }, maxRotation: 90, minRotation: 45 }
          }
        }
      }
    });
  </script>
</body>
</html>
